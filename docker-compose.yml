version: "3.7"

services:
    proxy:
        hostname: proxy
        image: caddy:2.7.5-alpine
        restart: unless-stopped
        cap_add:
            - NET_ADMIN
        extra_hosts:
            - "host.docker.internal:host-gateway"
        ports:
            - "80:80"
            - "443:443"
            - "443:443/udp"
            - "6000:6000"
        volumes:
            - ./Caddyfile:/etc/caddy/Caddyfile
            - caddy_data:/data
            - caddy_config:/config
            - ./website/content:/usr/share/content

    rocketchat:
        image: registry.rocket.chat/rocketchat/rocket.chat:${RELEASE:-latest}
        restart: always
        environment:
            MONGO_URL: "${MONGO_URL:-mongodb://${MONGODB_ADVERTISED_HOSTNAME:-mongodb}:${MONGODB_INITIAL_PRIMARY_PORT_NUMBER:-27017}/${MONGODB_DATABASE:-rocketchat}?replicaSet=${MONGODB_REPLICA_SET_NAME:-rs0}}"
            MONGO_OPLOG_URL: "${MONGO_OPLOG_URL:-mongodb://${MONGODB_ADVERTISED_HOSTNAME:-mongodb}:${MONGODB_INITIAL_PRIMARY_PORT_NUMBER:-27017}/local?replicaSet=${MONGODB_REPLICA_SET_NAME:-rs0}}"
            ROOT_URL: ${ROOT_URL:-http://localhost:${HOST_PORT:-3000}}
            PORT: ${PORT:-3000}
            DEPLOY_METHOD: docker
            DEPLOY_PLATFORM: ${DEPLOY_PLATFORM:-}
            REG_TOKEN: ${REG_TOKEN:-}
        depends_on:
            - mongodb
        expose:
            - ${PORT:-3000}
        # ports:
        #     - "${BIND_IP:-0.0.0.0}:${HOST_PORT:-3000}:${PORT:-3000}"

    mongodb:
        image: docker.io/bitnami/mongodb:${MONGODB_VERSION:-5.0}
        restart: always
        volumes:
            - mongodb_data:/bitnami/mongodb
        environment:
            MONGODB_REPLICA_SET_MODE: primary
            MONGODB_REPLICA_SET_NAME: ${MONGODB_REPLICA_SET_NAME:-rs0}
            MONGODB_PORT_NUMBER: ${MONGODB_PORT_NUMBER:-27017}
            MONGODB_INITIAL_PRIMARY_HOST: ${MONGODB_INITIAL_PRIMARY_HOST:-mongodb}
            MONGODB_INITIAL_PRIMARY_PORT_NUMBER: ${MONGODB_INITIAL_PRIMARY_PORT_NUMBER:-27017}
            MONGODB_ADVERTISED_HOSTNAME: ${MONGODB_ADVERTISED_HOSTNAME:-mongodb}
            MONGODB_ENABLE_JOURNAL: ${MONGODB_ENABLE_JOURNAL:-true}
            ALLOW_EMPTY_PASSWORD: ${ALLOW_EMPTY_PASSWORD:-yes}

    ghost:
        image: ghost:5-alpine
        env_file: website/.env.ghost
        container_name: ghost
        hostname: ghost
        depends_on:
            - proxy
            - database
        volumes:
            - ./website/content:/var/lib/ghost/content
        restart: unless-stopped

    database:
        image: mysql:8.0
        restart: unless-stopped
        env_file: website/.env.database
        volumes:
            - db_data:/var/lib/mysql

volumes:
    caddy_data:
    caddy_config:
    db_data:
    mongodb_data: { driver: local }
